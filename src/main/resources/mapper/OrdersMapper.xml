<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.zhang.ssm.mapper.OrdersMapper" >
  <resultMap id="BaseResultMap" type="cn.com.zhang.ssm.entity.Orders" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_num" property="orderNum" jdbcType="VARCHAR" />
    <result column="order_money" property="orderMoney" jdbcType="DOUBLE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
    <result column="iri_id" property="iriId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
    <result column="order_other" property="orderOther" jdbcType="VARCHAR" />
    <result column="order_price" property="orderPrice" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_num, order_money, remark, order_status, iri_id, create_date, flag, order_other, 
    order_price
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.zhang.ssm.entity.Orders" >
    insert into orders (id, order_num, order_money, 
      remark, order_status, iri_id, 
      create_date, flag, order_other, 
      order_price)
    values (#{id,jdbcType=INTEGER}, #{orderNum,jdbcType=VARCHAR}, #{orderMoney,jdbcType=DOUBLE}, 
      #{remark,jdbcType=VARCHAR}, #{orderStatus,jdbcType=VARCHAR}, #{iriId,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{flag,jdbcType=VARCHAR}, #{orderOther,jdbcType=VARCHAR}, 
      #{orderPrice,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.zhang.ssm.entity.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="orderMoney != null" >
        order_money,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="iriId != null" >
        iri_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="orderOther != null" >
        order_other,
      </if>
      <if test="orderPrice != null" >
        order_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="orderMoney != null" >
        #{orderMoney,jdbcType=DOUBLE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="iriId != null" >
        #{iriId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="orderOther != null" >
        #{orderOther,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.zhang.ssm.entity.Orders" >
    update orders
    <set >
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="orderMoney != null" >
        order_money = #{orderMoney,jdbcType=DOUBLE},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="iriId != null" >
        iri_id = #{iriId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="orderOther != null" >
        order_other = #{orderOther,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null" >
        order_price = #{orderPrice,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.zhang.ssm.entity.Orders" >
    update orders
    set order_num = #{orderNum,jdbcType=VARCHAR},
      order_money = #{orderMoney,jdbcType=DOUBLE},
      remark = #{remark,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      iri_id = #{iriId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=VARCHAR},
      order_other = #{orderOther,jdbcType=VARCHAR},
      order_price = #{orderPrice,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--******************************自定义的Mapper配置**********************************-->

  <!--配置嵌套查询入住信息数据的结果集-->
  <resultMap id="ordersAndSelINIMap" type="Orders" extends="BaseResultMap">
      <association property="inRoomInfo" column="iri_id" select="cn.com.zhang.ssm.mapper.InRoomInfoMapper.selectByPrimaryKey"/>
  </resultMap>

  <!--嵌套查询订单及其入住信息数据-->
  <select id="selTByPramas" resultMap="ordersAndSelINIMap">
       select <include refid="Base_Column_List"/> from orders
       <where>
            <if test="orderNum!=null and orderNum!=''">
                 and order_num like concat("%",#{orderNum},"%")
            </if>
            <if test="minDate!=null and maxDate!=null">
                 and create_date &gt;= #{minDate} and create_date &lt;= #{maxDate}
            </if>
            <if test="orderStatus!=null and orderStatus!=''">
                 and order_status = #{orderStatus}
            </if>
            <!--查询显示的订单数据-->
            and flag = 1
       </where>
       order by id desc
  </select>

  <!--根据多个订单编号修改订单显示状态-->
  <update id="updBatchSelective">
      UPDATE orders
       <set>
           <if test="t.flag!=null and t.flag!=''">
               flag = #{t.flag},
           </if>
       </set>
        where id in
       <foreach collection="ids" item="item" open="(" separator="," close=")">
          #{item}
       </foreach>
  </update>

  <!--根据条件查询单个订单数据-->
  <select id="selOneByPramas" resultMap="BaseResultMap">
       select <include refid="Base_Column_List"/> from orders
       <where>
         <if test="orderNum!=null and orderNum!=''">
              and order_num = #{orderNum}
         </if>
       </where>
  </select>

</mapper>